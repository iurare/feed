{"version":"https://jsonfeed.org/version/1.1","title":"@iurare/rss","home_page_url":"https://github.com/iurare","feed_url":"https://iurare.github.io/feed/rss.json","icon":"https://avatars.githubusercontent.com/u/16333253","items":[{"id":"https://okuranagaimo.blogspot.com/2022/07/rubypython.html","url":"https://okuranagaimo.blogspot.com/2022/07/rubypython.html","title":"RubyがPythonよりも読みやすい理由","content_html":"<blockquote> <p><a href=\"https://okuranagaimo.blogspot.com/\">ブログ</a> <strong>RubyがPythonよりも読みやすい理由</strong></p> <p>by Unknown <i>#Computer</i></p> <p><a href=\"https://confuzeus.com/posts/python-ruby-readability/\">Confuzeusより</a>。</p><blockquote class=\"ref\"><p>RubyとPythonはほとんど区別つきません。PythonプログラマがRubyのコードベースを開けば、外部の調査をしなくても、そのほとんどを理解することができるでしょう。Pythonのコードベースを開くRubyプログラマにも同じことが言えます。</p> <p>ただし、PythonistaがRubyのコードベースを理解するのと同じように、RubyistがPythonのコードベースを簡単に理解できる可能性は低いでしょう。</p> <p>この投稿では、その理由を説明します。</p> <h3>オブジェクト</h3> <p>ブログの投稿を表すクラスを作成します。</p> <h3>Pythonの場合</h3> <pre><code>class BlogPost:<br /><br /> def __init__(self, title, body):<br /> self.title = title<br /> self.body = body<br /> self.published = False<br /><br /> def publish(self):<br /> self.published = True</code></pre> <p>遊んでみましょう。</p> <pre><code>post = BlogPost(<br /> title=\"How I built my blog using Kubernetes, Lambda, and React.\",<br /> body=\"Wordpress was an insult to my intelligence and so I ...\")<br /><br />post.publish()</code></pre> <p>ブログ投稿のタイトルを出力できるようにしたいのですが、これを実現するには2つの方法があります。</p> <p>1つ目は、単純に属性を出力する方法です。</p> <pre><code>print(post.title)</code></pre> <p>2つ目は、クラスに__str__メソッドを追加する方法です。</p> <pre><code>class BlogPost:<br /><br /> def __init__(self, title, body):<br /> self.title = title<br /> self.body = body<br /> self.published = False<br /><br /> def publish(self):<br /> self.published = True<br /><br /> def __str__(self):<br /> return self.title</code></pre> <p>これで、簡単にタイトルを出力できるようになりました。</p> <pre><code>print(post)</code></pre> <p>もし、投稿のタイトルを変更したい場合はどうすればいいでしょうか?</p> <p>簡単です。</p> <pre><code>post.title = \"How I built build my blog using modern instead of simple tools.\"</code></pre> <h3>Rubyでは</h3> <p>同じことをRubyでやってみましょう。</p> <pre><code>class BlogPost<br /><br /> def initialize(title, body)<br /> @title = title<br /> @body = body<br /> @published = false<br /> end<br /><br /> def publish<br /> @published = true<br /> end<br /><br />end</code></pre> <p>クラスで遊ぶのも同じくらい簡単です。</p> <pre><code>post = BlogPost.new(\"How I built my blog using Kubernetes, Lambda, and React.\",<br /> \"Wordpress was an insult to my intelligence and so I ...\")<br /><br />post.publish</code></pre> <p>投稿のタイトルを出力してみましょう。</p> <pre><code>puts post.title</code></pre> <p>やばい! 未定義のメソッド`title'があった。</p> <p>Rubyでは、Pythonのようにインスタンス変数にアクセスすることはできません。getterが必要です。</p> <pre><code>class BlogPost<br /><br /> def initialize(title, body)<br /> @title = title<br /> @body = body<br /> @published = false<br /> end<br /><br /> def publish<br /> @published = true<br /> end<br /><br /> def title<br /> @title<br /> end<br /><br />end</code></pre> <p>また、属性を直接設定することもできないので、setterが必要です。</p> <pre><code>class BlogPost<br /><br /> def initialize(title, body)<br /> @title = title<br /> @body = body<br /> @published = false<br /> end<br /><br /> def publish<br /> @published = true<br /> end<br /><br /> def title<br /> @title<br /> end<br /><br /> def title=(new_title)<br /> @title = new_title<br /> end<br /><br />end</code></pre> <p>これで、遊ぶことができます。</p> <pre><code>puts post.title <br />post.title = \"How I built build my blog using modern instead of simple tools.\"</code></pre> <p>Pythonで使った__str__ のトリックはどうでしょう?</p> <pre><code>class BlogPost<br /><br /> def initialize(title, body)<br /> @title = title<br /> @body = body<br /> @published = false<br /> end<br /><br /> def publish<br /> @published = true<br /> end<br /><br /> def title<br /> @title<br /> end<br /><br /> def title=(new_title)<br /> @title = new_title<br /> end<br /><br /> def to_s<br /> @title<br /> end<br /><br />end</code></pre> <pre><code>puts post</code></pre> <h3>RubyとPythonのオブジェクトの比較</h3> <p>ちょっと待ってください、どちらも十分に読みやすいように見えますが。その通りですが、これを見て下さい。</p> <pre><code>class BlogPost:<br /> count = 0<br /><br /> def __init__(self, title, body):<br /> self.title = title<br /> self.body = body<br /> self.published = False<br /> BlogPost.count += 1<br /><br /> def publish(self):<br /> self.published = True<br /><br /> def __str__(self):<br /> return self.title</code></pre> <p>投稿数にはBlogPost.countやpost.countでアクセスすることができます。</p> <p>Rubyの場合、</p> <pre><code>class BlogPost<br /> @@count = 0<br /><br /> def initialize(title, body)<br /> @title = title<br /> @body = body<br /> @published = false<br /> @@count += 1<br /> end<br /><br /> def publish<br /> @published = true<br /> end<br /><br /> def title<br /> @title<br /> end<br /><br /> def title=(new_title)<br /> @title = new_title<br /> end<br /><br /> def to_s<br /> @title<br /> end<br /><br /> def count<br /> @@count<br /> end<br /><br />end</code></pre> <p>これでpost.countにはアクセスできるようになったのですが、PythonのようにBlogPost.countにはアクセスできません。これはクラス変数なので、クラス自体からアクセスできるようにする必要があります。</p> <pre><code>class BlogPost<br /> @@count = 0<br /><br /> def initialize(title, body)<br /> @title = title<br /> @body = body<br /> @published = false<br /> @@count += 1<br /> end<br /><br /> def publish<br /> @published = true<br /> end<br /><br /> def title<br /> @title<br /> end<br /><br /> def title=(new_title)<br /> @title = new_title<br /> end<br /><br /> def to_s<br /> @title<br /> end<br /><br /> def count<br /> @@count<br /> end<br /><br /> def self.count<br /> @@count<br /> end<br /><br />end</code></pre> <p>これでBlogPost.countができるようになりました。しかし、post.countは普通のインスタンス変数と混同される可能性があるので、むしろできない方がいいのです。</p> <pre><code>class BlogPost<br /> @@count = 0<br /><br /> def initialize(title, body)<br /> @title = title<br /> @body = body<br /> @published = false<br /> @@count += 1<br /> end<br /><br /> def publish<br /> @published = true<br /> end<br /><br /> def title<br /> @title<br /> end<br /><br /> def title=(new_title)<br /> @title = new_title<br /> end<br /><br /> def to_s<br /> @title<br /> end<br /><br /> def self.count<br /> @@count<br /> end<br /><br />end</code></pre> <p>これで、BlogPostクラスからしか、countにアクセスできなくなりました。しかし、クラス変数を設定することはできるのでしょうか?</p> <p>試してみましょう。</p> <pre><code>BlogPost.count = 0</code></pre> <p>もちろん、そんなことはありません! この変数のsettetrを定義したことはありません。</p> <p>Pythonではどうでしょうか?</p> <pre><code>post.count = 0</code></pre> <p>できます。クラスからもそれを行うことができます。</p> <pre><code>BlogPost.count = 0</code></pre> <h3>Rubyオブジェクトはもっと簡単ですか?</h3> <p>皆さんはどうか分かりませんが、Rubyではクラス属性とインスタンス属性の違いが分かりやすいと思います。</p> <p>setterとgetterを使えば、どの属性が読み書きが可能かを明確に指定することができます。setterを実装しないことで、クラス属性を保護することができます。Pythonでは、誤ってcount属性に書き込んでしまいがちです。これにより、プログラムを壊してしまう可能性があります。</p> <p>デフォルトでは、post.countもBlogPost.countも属性の値を返しますが、クラスからしかアクセスできないようにすれば、それがクラス属性であることに気づきやすくなります。</p> <p>その理由の一つは、Rubyのオブジェクトはメソッド呼び出しにしか反応しないのに対し、Pythonでは属性とメソッドの両方にアクセスを許可するためです。</p> <p>このPythonコードを見て下さい。</p> <pre><code>class Person<br /> def __init__(self):<br /> self.age = 0<br /><br />person = Person()<br />person.age = -1</code></pre> <p>プログラミングのミスで、年齢がマイナスになってしまうことがあります。この問題を解決するには、次のようにします。</p> <pre><code>class Person:<br /> def __init__(self):<br /> self.__age = 0<br /><br /> @property<br /> def age(self):<br /> return self.__age<br /><br /> def set_age(self, val):<br /> if val < 0:<br /> raise ValueError(\"Age must be 0 or more\")<br /> self.__age = val<br /> return val<br /><br />person = Person()<br />print(person.age)<br />person.age = 12<br />>>> AttributeError<br />person.set_age(12)</code></pre> <p>@propertyを使用することもできますが、その場合、このプロパティに対して書き込み操作を行うために、別のAPIを実装する必要があります。もう、以下のように__setattr__を使用しない限り、おなじみの=演算子に頼ることはできなくなりました。</p> <pre><code>class Person:<br /> ...<br /> def __setattr__(self, att, val):<br /> if att == 'age':<br /> if val < 0:<br /> raise ValueError(\"Age must be >= 0\")<br /> self.__age = val<br /> return val<br /> else:<br /> return super().__setattr__(att, val)<br /><br />person.age = 10<br /># Bithday<br />person.age += 1<br />print(person.age)<br />>>> 11<br />person.age = -1<br />>>> ValueError<br />person.age = 0<br />person.age -= 1<br />>>> ValueError</code></pre> <p>今度はRubyで同じことをやってみましょう。</p> <pre><code>class Person<br /> attr_reader :age<br /><br /> def initialize<br /> @age = 0<br /> end<br /><br /> def age=(val)<br /> raise ArgumentError, \"Age must be >= 0\" unless age >= 0<br /> @age = val<br /> end<br />end<br /><br />person = Person.new<br />person.age -= 1<br />>>> ArgumentError</code></pre> <p>どれだけシンプルになりましたか?</p> <p>ダンダーメソッド(__str__)についてどう思いますか? 個人的には、to_sの方が分かりやすいと思います。このメソッドを呼び出すと、このオブジェクトの文字列表現が返されることを明確に意味します。Pythonでは、post.__str__は絶対にやりません。代わりに、str(post)を実行します。strメソッドはあなたに代わって、__str__ メソッドを呼び出し、その結果を返します。確かに、すべての道はローマに通じていますが、素直さという点では、すべて同じではありません。</p> <h3>ダンダーの詳細</h3> <p>これをチェックして下さい。</p> <pre><code>class Matrix:<br /><br /> def __init__(self, x, y):<br /> self.x = x<br /> self.y = y<br /><br /> def __add__(self, to):<br /> return Matrix(self.x + to.x, self.y + to.y)<br /><br /> def __str__(self):<br /> return f\"({self.x}, {self.y})\"</code></pre> <p>遊んでみます。</p> <pre><code>a = Matrix(1, 1) <br />b = Matrix(2, 2) <br />print(a + b)</code></pre> <p>(3, 3)が返ってくるはずです。</p> <p>Rubyでも同じことが言えます。</p> <pre><code>class Matrix<br /> attr_reader :x, :y<br /><br /> def initialize(x, y)<br /> @x = x<br /> @y = y<br /> end<br /><br /> def +(to)<br /> Matrix.new(@x + to.x, @y + to.y)<br /> end<br /><br /> def to_s<br /> \"(#{@x}, #{@y})\"<br /> end<br />end</code></pre> <p>遊んでみます。</p> <pre><code>a = Matrix.new(1, 1) <br />b = Matrix.new(2, 2) <br />puts a + b</code></pre> <p>このように、Rubyでは特別なダンダーメソッドについて知る必要はありません。もし、自分のクラスで+演算子に反応させたいなら、単にクラスで+メソッドを実装すればいいのです。</p> <p>これはPythonの__add__よりも読みやすいと思います。舞台裏では、オブジェクトで+を呼び出すと、addが呼び出されて、オブジェクトの__add__メソッドが呼び出されます。</p> <p>ネオは弾丸をすばやくかわす必要があり、Rubyで行列を実装することで、より直感的な計算が可能になります。</p> <h3>クラス継承</h3> <p>DRYな方法でオブジェクトを作成するためのビューを実装してみましょう。</p> <pre><code>class View:<br /> ...<br /><br />class ProcessFormView(View):<br /> ...<br /><br />class ContextMixin:<br /> ...<br /><br />class SingleObjectMixin:<br /> ...<br /><br />class FormMixin:<br /> ...<br /><br />class ModelFormMixin:<br /> ...<br /><br />class BaseCreateView(ContextMixin, SingleObjectMixin, FormMixin, ModelFormMixin, ProcessFormView):<br /> ...<br /><br />class TemplateResponseMixin:<br /> ...<br /><br />class SingleObjectTemplateResponseMixin:<br /> ...<br /><br />class CreateView(TemplateResponseMixin, SingleObjectTemplateResponseMixin, BaseCreateView):<br /><br /> def form_valid(self, form):<br /> ...</code></pre> <p>これらのクラスのうち、私がオーバーライドしているform_validメソッドを持っているのはどれでしょうか? 言い換えれば、私がsuper().form_valid(form)を呼び出したら、super()はどのクラスを参照しているのでしょうか? それを知るために、PythonはC3と呼ばれるアルゴリズムを使って、メソッド順序解決(MRO)と呼ばれるものを実装します。</p> <p><a href=\"https://www.jetbrains.com/pycharm/\">Pycharm</a>をインストールされていない限り、手動でそれを理解することはほとんど不可能です。実際のところ、Djangoのクラスベースのビューのメソッド順序解決を理解するのを助けるためだけの<a href=\"https://ccbv.co.uk/\">Webサイト全体</a>が作成されました。Pythonは多重継承を完全にサポートしており、開発者はそれを惜しげもなく使っています。</p> <p>Rubyでは、多重継承は不可能です。</p> <pre><code>class View:<br /> ...<br />end<br /><br />class ProcessFormView < View:<br /> ...<br />end<br /><br />module ContextMixin<br /> ...<br />end<br /><br />module SingleObjectMixin<br /> ...<br />end<br /><br />module FormMixin<br /> ...<br />end<br /><br />module ModelFormMixin<br /> ...<br />end<br /><br />class BaseCreateView < ProcessFormView<br /> include ContextMixin<br /> include SingleObjectMixin<br /> include FormMixin<br /> include ModelFormMixin<br />end<br /><br />module TemplateResponseMixin<br /> ...<br />end<br /><br />module SingleObjectTemplateResponseMixin<br /> ...<br />end<br /><br />class CreateView < BaseCreateView<br /> include TemplateResponseMixin<br /> include SingleObjectTemplateResponseMixin<br /><br /> def form_valid(form)<br /> ...<br /> end<br />end</code></pre> <p>かつて、賢者は「合成(composition)よりも継承(inheritance)を好む」と言いました。彼は異端のために処刑されました。</p> <p>このように、Rubyでは、動作を共有する必要がある場合、継承ではなく合成を使う必要があります。</p> <p>Pythonでは、Mixinは単なるクラスです、それをインスタンス化でき、状態を保持することができます。Rubyでは、Mixinはモジュールであり、インスタンス化することはできません。PythonのようにMROを機にする必要がないからです。理由は次のとおりです。</p> <ol><li>単一のスーパークラスから継承している(MROは必要ない)</li><li>最後のMixinは、前のMixinと似たような名前のものを上書きする</li><li>合成は呼び出されない</li></ol> <p>Pythonでは、多重継承を行っているのに、合成を行っているように見せかけなければなりません。Rubyでは、合成は言語の中に組み込まれています。Rubyのモジュールはクラスではないため、よりシンプルになる可能性が高く、読みやすさの面で大きな利点があります。</p> <h3>結論</h3> <p>この指示を見て下さい。</p> <ol><li>右に曲がって、一歩踏み出して下さい</li><li>次に、左に曲がって、一歩踏み出します</li><li>そして、もう一度左に曲がって、一歩踏み出します</li><li>最後に、右に曲がって下さい</li></ol> <p>そして、これです。</p> <ol><li>一歩前進して下さい</li></ol> <p>どちらの言語も、例えばPHPやJavaよりもはるかに読みやすいですが、Rubyはさらに一歩進んで、一目で理解できるコードを書くことができるのです。</p> <p>ここでは表面をかじっただけです。Rubyを初めて使う人は、<a href=\"https://poignant.guide/\">この本</a>を読んで、Rubyが人間が読みやすいコードを書くために役立つ様々な方法を学ぶことをお勧めします。</p></blockquote><p><a href=\"https://news.ycombinator.com/item?id=32158800\">Hacker News</a></p> <p>Article URL: <a href=\"https://okuranagaimo.blogspot.com/2022/07/rubypython.html\">https://okuranagaimo.blogspot.com/2022/07/rubypython.html</a></p> </blockquote>","date_published":"2022-07-22T08:26:01.897Z"},{"id":"https://endler.dev/2017/yes/","url":"https://endler.dev/2017/yes/","title":"A Little Story About the `yes` Unix Command","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>A Little Story About the `yes` Unix Command</strong></p> <p>by calvin@users.lobste.rs (calvin) <i>#unix</i> <i>#performance</i></p> <p><a href=\"https://lobste.rs/s/n3ydep/little_story_about_yes_unix_command\">Comments</a></p> <p>Article URL: <a href=\"https://endler.dev/2017/yes/\">https://endler.dev/2017/yes/</a></p> </blockquote>","date_published":"2022-07-21T23:59:15.000Z"},{"id":"https://blog.jfo.click/makin-wavs-with-zig/","url":"https://blog.jfo.click/makin-wavs-with-zig/","title":"Makin' wavs with Zig","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Makin' wavs with Zig</strong></p> <p>by ngoldbaum@users.lobste.rs (ngoldbaum) <i>#debugging</i> <i>#zig</i></p> <p><a href=\"https://lobste.rs/s/3zhmel/makin_wavs_with_zig\">Comments</a></p> <p>Article URL: <a href=\"https://blog.jfo.click/makin-wavs-with-zig/\">https://blog.jfo.click/makin-wavs-with-zig/</a></p> </blockquote>","date_published":"2022-07-21T23:35:43.000Z"},{"id":"https://srad.jp/story/22/07/20/1517206/","url":"https://srad.jp/story/22/07/20/1517206/","title":"東京駅・東海道新幹線ホームにスジャータアイス自販機が設置される","content_html":"<blockquote> <p><a href=\"https://srad.jp/\">スラド</a> <strong>東京駅・東海道新幹線ホームにスジャータアイス自販機が設置される</strong></p> <p>by nagazou <i>#humor</i></p> <img align=\"right\" height=\"64\" width=\"64\" src=\"https://srad.jp/static/topics/humor_64.png\">東京駅の東海道新幹線ホームに、スジャータアイスの自動販売機が登場したそうだ。スジャータアイスは東海道新幹線の車内販売で売られていた通称「<a href=\"https://www.jr-cp.co.jp/special/shinkansenicecream/\">シンカンセンスゴイカタイアイス</a>」を自販機販売するようになったもののようだ。今月の15日から販売されるようになったという。鉄道新聞のレビューによると味によって価格が異なるらしい。また気になる硬さに関しては車内販売ほどカチカチではないものの、程よい固さであるとしている（<a href=\"https://tetsudo-shimbun.com/article/topic/entry-3309.html\">鉄道新聞</a>、<a href=\"https://twitter.com/tetsudoshimbun/status/1547739117169278976\">鉄道新聞公式Twitter</a>）。<br> <br> あるAnonymous Coward 曰く、<blockquote><div><p># <a href=\"https://twitter.com/swind_prv/status/1003257683560943616\">ミニボトルの酒を垂らすとイイらしい</a> </p></div></blockquote><p> <a href=\"https://srad.jp/story/22/07/20/1517206/\">すべて読む</a> | <a href=\"https://srad.jp/stories/humor\">変なモノ</a> | <a href=\"https://srad.jp/stories/entertainment\">娯楽</a> | <a href=\"https://srad.jp/stories/transport\">交通</a> | <a href=\"https://twitter.com/share?url=https://srad.jp/story/22/07/20/1517206/&text=%E6%9D%B1%E4%BA%AC%E9%A7%85%E3%83%BB%E6%9D%B1%E6%B5%B7%E9%81%93%E6%96%B0%E5%B9%B9%E7%B7%9A%E3%83%9B%E3%83%BC%E3%83%A0%E3%81%AB%E3%82%B9%E3%82%B8%E3%83%A3%E3%83%BC%E3%82%BF%E3%82%A2%E3%82%A4%E3%82%B9%E8%87%AA%E8%B2%A9%E6%A9%9F%E3%81%8C%E8%A8%AD%E7%BD%AE%E3%81%95%E3%82%8C%E3%82%8B\" title=\"この記事をTwitterでつぶやく\"><img alt=\"この記事をTwitterでつぶやく\" border=\"0\" src=\"//images.srad.jp/classic/img/twitter_32.png/20150127\" /></a> <a href=\"//www.facebook.com/sharer.php?u=https://srad.jp/story/22/07/20/1517206/\" title=\"この記事をFacebookで共有\"><img src=\"//images.srad.jp/classic/img/facebook_32.png\" border=\"0\" alt=\"この記事をFacebookで共有\" /></a> <a href=\"https://plus.google.com/share?url=https://srad.jp/story/22/07/20/1517206/\" title=\"この記事をGoogle Plusで共有\"><img src=\"https://www.gstatic.com/images/icons/gplus-32.png\" border=\"0\" alt=\"この記事をGoogle Plusで共有\" /></a> <a href=\"//b.hatena.ne.jp/entry/https://srad.jp/story/22/07/20/1517206/\" title=\"このエントリーをはてなブックマークに追加\"><img src=\"https://b.st-hatena.com/images/entry-button/button-only@2x.png\" alt=\"このエントリーをはてなブックマークに追加\" width=\"32\" height=\"32\" style=\"border: none;\" border=\"0\" /></a> </p> <p> 関連ストーリー： <br><a href=\"https://idle.srad.jp/story/22/06/27/1732203\">アイスクリームにトッピングできる香水「Culinary Perfume」</a> <small>2022年06月29日</small> <br><a href=\"https://it.srad.jp/story/22/04/11/1649221\">リモート勤務の結果、間食が増えたとの調査結果。BCN記事</a> <small>2022年04月13日</small> <br><a href=\"https://hardware.srad.jp/story/21/09/04/0214225\">故障率の高い米マクドナルドのアイスクリームマシン、連邦取引委員会が調査に乗り出したとの報道</a> <small>2021年09月04日</small> <br><a href=\"https://idle.srad.jp/story/20/10/31/070255\">スウェーデンに進出したAmazon、サイト上で間違った表示が相次ぐ</a> <small>2020年10月31日</small> <br><a href=\"https://idle.srad.jp/story/20/10/25/2121205\">ドイツのソフトウェアエンジニア、米マクドナルド各店舗のアイスクリームマシン稼働状況を表示するサイト「mcbroken」を公開</a> <small>2020年10月26日</small> </p> <p>Article URL: <a href=\"https://srad.jp/story/22/07/20/1517206/\">https://srad.jp/story/22/07/20/1517206/</a></p> </blockquote>","date_published":"2022-07-21T23:03:00.000Z"},{"id":"https://wired.jp/article/china-big-tech-regulation/","url":"https://wired.jp/article/china-big-tech-regulation/","title":"中国が強化するテクノロジー分野の規制は、他国にとっても“学び”となるか","content_html":"<blockquote> <p><a href=\"https://wired.jp\">最新情報 Feed – WIRED.jp</a> <strong>中国が強化するテクノロジー分野の規制は、他国にとっても“学び”となるか</strong></p> <p> <i>#Business</i> <i>#Censorship</i> <i>#China</i> <i>#Internet</i> <i>#Privacy</i> <i>#Regulation</i> <i>#Security</i></p> 中国政府によるテクノロジー分野の規制対象は、いまやテック企業からインフルエンサー、アルゴリズムにまで広がっている。一見すると世界の動きに反する独自路線にも見えるが、実はこうした規制から他国も“学び”を得られるかもしれない。 <p>Article URL: <a href=\"https://wired.jp/article/china-big-tech-regulation/\">https://wired.jp/article/china-big-tech-regulation/</a></p> </blockquote>","date_published":"2022-07-21T23:00:00.000Z"},{"id":"https://science.srad.jp/story/22/07/20/155253/","url":"https://science.srad.jp/story/22/07/20/155253/","title":"雨が止むと傘を忘れる現象の原因は「メリットの法則」","content_html":"<blockquote> <p><a href=\"https://srad.jp/\">スラド</a> <strong>雨が止むと傘を忘れる現象の原因は「メリットの法則」</strong></p> <p>by nagazou <i>#science</i></p> <img align=\"right\" height=\"64\" width=\"64\" src=\"https://srad.jp/static/topics/science_64.png\">NHKが「雨が止むと傘を忘れる現象」に関して調査をおこなったという。JR西日本管内では、忘れ物として届けられる傘は年間10~15万本。受け取りに来る人は少なく、8割近くが廃棄されているという。行動分析学者の奥田健次さんに「人はなぜ傘を忘れてしまうのか」を聞いたところ「メリットの法則」というものが影響しているという（<a href=\"https://www3.nhk.or.jp/news/html/20220717/k10013719321000.html\">NHK</a>）。<br> <br> 雨が降っているときに傘をさすのは、ぬれないメリットがあり、一方で、雨がやむと傘のメリットがなくなる。このため傘を持つという行動をしにくくなるのだとしている。建物から出るときに傘を忘れずに持ち帰るためには、傘の存在に意識を集中させる必要があるとしている。<p> <a href=\"https://science.srad.jp/story/22/07/20/155253/\">すべて読む</a> | <a href=\"https://science.srad.jp/\">サイエンスセクション</a> | <a href=\"https://srad.jp/stories/science\">サイエンス</a> | <a href=\"https://twitter.com/share?url=https://science.srad.jp/story/22/07/20/155253/&text=%E9%9B%A8%E3%81%8C%E6%AD%A2%E3%82%80%E3%81%A8%E5%82%98%E3%82%92%E5%BF%98%E3%82%8C%E3%82%8B%E7%8F%BE%E8%B1%A1%E3%81%AE%E5%8E%9F%E5%9B%A0%E3%81%AF%E3%80%8C%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88%E3%81%AE%E6%B3%95%E5%89%87%E3%80%8D\" title=\"この記事をTwitterでつぶやく\"><img alt=\"この記事をTwitterでつぶやく\" border=\"0\" src=\"//images.srad.jp/classic/img/twitter_32.png/20150127\" /></a> <a href=\"//www.facebook.com/sharer.php?u=https://science.srad.jp/story/22/07/20/155253/\" title=\"この記事をFacebookで共有\"><img src=\"//images.srad.jp/classic/img/facebook_32.png\" border=\"0\" alt=\"この記事をFacebookで共有\" /></a> <a href=\"https://plus.google.com/share?url=https://science.srad.jp/story/22/07/20/155253/\" title=\"この記事をGoogle Plusで共有\"><img src=\"https://www.gstatic.com/images/icons/gplus-32.png\" border=\"0\" alt=\"この記事をGoogle Plusで共有\" /></a> <a href=\"//b.hatena.ne.jp/entry/https://science.srad.jp/story/22/07/20/155253/\" title=\"このエントリーをはてなブックマークに追加\"><img src=\"https://b.st-hatena.com/images/entry-button/button-only@2x.png\" alt=\"このエントリーをはてなブックマークに追加\" width=\"32\" height=\"32\" style=\"border: none;\" border=\"0\" /></a> </p> <p> 関連ストーリー： <br><a href=\"https://srad.jp/story/07/11/20/0546240\">12/10より改正遺失物法が施行、ネットで公開・保管期間の短縮など…</a> <small>2007年11月20日</small> <br><a href=\"https://srad.jp/story/07/07/31/0951201\">いつ雨が降るか教えてくれる傘</a> <small>2007年07月31日</small> </p> <p>Article URL: <a href=\"https://science.srad.jp/story/22/07/20/155253/\">https://science.srad.jp/story/22/07/20/155253/</a></p> </blockquote>","date_published":"2022-07-21T22:04:00.000Z"},{"id":"https://wired.jp/membership/2022/07/22/multifarious-multiplexity-taika-waititi/","url":"https://wired.jp/membership/2022/07/22/multifarious-multiplexity-taika-waititi/","title":"子どもっぽくならずに、子どもらしくあるために：タイカ・ワイティティが生きるマルチプレックスな多面性","content_html":"<blockquote> <p><a href=\"https://wired.jp\">最新情報 Feed – WIRED.jp</a> <strong>子どもっぽくならずに、子どもらしくあるために：タイカ・ワイティティが生きるマルチプレックスな多面性</strong></p> <p> <i>#Culture</i> <i>#Interview</i> <i>#Movie</i></p> 監督・脚本を手がける『ソー：ラブ＆サンダー』が公開中のタイカ・ワイティティは、代表作『ジョジョ・ラビット』をはじめ、これまで俳優、脚本家、監督としてつねに不条理さと人情味を同居させ、あらゆる相反する衝動が入り混じる彼独自のスタイルを築き上げてきた。『WIRED』US版のカバーインタビュー。 <p>Article URL: <a href=\"https://wired.jp/membership/2022/07/22/multifarious-multiplexity-taika-waititi/\">https://wired.jp/membership/2022/07/22/multifarious-multiplexity-taika-waititi/</a></p> </blockquote>","date_published":"2022-07-21T22:00:34.000Z"},{"id":"https://oxide-and-friends.transistor.fm/episodes/debugging-methodologies","url":"https://oxide-and-friends.transistor.fm/episodes/debugging-methodologies","title":"Debugging Methodologies","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Debugging Methodologies</strong></p> <p>by teymour@users.lobste.rs (teymour) <i>#audio</i> <i>#debugging</i></p> <p><a href=\"https://lobste.rs/s/9itzh9/debugging_methodologies\">Comments</a></p> <p>Article URL: <a href=\"https://oxide-and-friends.transistor.fm/episodes/debugging-methodologies\">https://oxide-and-friends.transistor.fm/episodes/debugging-methodologies</a></p> </blockquote>","date_published":"2022-07-21T21:50:22.000Z"},{"id":"https://applech2.com/archives/20220722-anker-powerwave-select-magnetic-stand-lite.html","url":"https://applech2.com/archives/20220722-anker-powerwave-select-magnetic-stand-lite.html","title":"米Anker、MagSafeを利用してiPhoneを固定できる「PowerWave Select Magnetic Stand Lite」とワイヤレス充電パッド「Anker 315 Wireless Charger (Pad)」を発売。","content_html":"<blockquote> <p><a href=\"https://applech2.com\">AAPL Ch.</a> <strong>米Anker、MagSafeを利用してiPhoneを固定できる「PowerWave Select Magnetic Stand Lite」とワイヤレス充電パッド「Anker 315 Wireless Charger (Pad)」を発売。</strong></p> <p> <i>#Anker</i> <i>#Gadget</i> <i>#MagSafe for iPhone</i> <i>#Qi</i> <i>#USB-C</i></p> <div> <a href=\"https://applech2.com/archives/20220722-anker-powerwave-select-magnetic-stand-lite.html\"><img title=\"Anker-315-Wireless-Charger-and-PowerWave-Select-Magnetic-Stand-Lite-Hero\" src=\"https://applech2.com/wp-content/uploads/2022/07/Anker-PowerWave-Select-Magnetic-Stand-Lite-logo-icon.jpg\" alt=\"Anker 315 Wireless Charger (Pad) and PowerWave Select Magnetic Stand Lite\" width=\"256\" height=\"256\" /></a> </div> <p> 米AnkerがMagSafeを利用してiPhoneを固定できる「PowerWave Select Magnetic Stand Lite」とワイヤレス充電パッド「Anker 315 Wireless Charger (</p> The post <a href=\"https://applech2.com/archives/20220722-anker-powerwave-select-magnetic-stand-lite.html\">米Anker、MagSafeを利用してiPhoneを固定できる「PowerWave Select Magnetic Stand Lite」とワイヤレス充電パッド「Anker 315 Wireless Charger (Pad)」を発売。</a> first appeared on <a href=\"https://applech2.com\">AAPL Ch.</a>. <p>Article URL: <a href=\"https://applech2.com/archives/20220722-anker-powerwave-select-magnetic-stand-lite.html\">https://applech2.com/archives/20220722-anker-powerwave-select-magnetic-stand-lite.html</a></p> </blockquote>","date_published":"2022-07-21T21:47:04.000Z"},{"id":"https://dev.to/flare/typing-your-way-into-safety-4lek","url":"https://dev.to/flare/typing-your-way-into-safety-4lek","title":"Typing your way into safety","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Typing your way into safety</strong></p> <p>by isra17@users.lobste.rs (isra17) <i>#python</i> <i>#security</i></p> <p><a href=\"https://lobste.rs/s/7ihdf7/typing_your_way_into_safety\">Comments</a></p> <p>Article URL: <a href=\"https://dev.to/flare/typing-your-way-into-safety-4lek\">https://dev.to/flare/typing-your-way-into-safety-4lek</a></p> </blockquote>","date_published":"2022-07-21T21:39:39.000Z"},{"id":"https://it.srad.jp/story/22/07/20/1532255/","url":"https://it.srad.jp/story/22/07/20/1532255/","title":"英政府、賭博に関連する法令による loot box 規制を見送り","content_html":"<blockquote> <p><a href=\"https://srad.jp/\">スラド</a> <strong>英政府、賭博に関連する法令による loot box 規制を見送り</strong></p> <p>by nagazou <i>#games</i></p> <img align=\"right\" height=\"64\" width=\"64\" src=\"https://srad.jp/static/topics/games_64.png\">headless 曰く、<blockquote><div><p>英国政府は 18 日、ゲーム内の loot box (ガチャを含むランダムアイテム購入機能) を賭博に関する法令の規制対象にしない方針を発表した (<a href=\"https://www.gov.uk/government/consultations/loot-boxes-in-video-games-call-for-evidence/outcome/government-response-to-the-call-for-evidence-on-loot-boxes-in-video-games\">英政府の発表</a>、 <a href=\"https://www.bbc.com/news/technology-62177616\">BBC News の記事</a>、 <a href=\"https://www.neowin.net/news/uk-wont-regulate-video-game-loot-boxes-despite-gambling-risk/\">Neowin の記事</a>、 <a href=\"https://www.slashgear.com/931778/the-uk-government-just-decided-the-fate-of-loot-boxes-and-its-not-what-we-expected/\">SlashGear の記事</a>)。<br> <br> 英国では 2019 年から<a href=\"https://idle.srad.jp/story/20/07/05/0744217/\">上下院の委員会が loot box を賭博として規制対象にするよう政府に勧告</a>しており、政府も法令の見直しを行う方針を示していた。しかし、意見募集の結果や各種研究の結果を検討した結果、loot box が賭博に関連する害を引き起こす可能性があるとの意見が多かったものの、賭博による問題との因果関係を示す証拠はなかったという。そのため、現時点で賭博に関する法令で規制することは見送り、未成年者への販売禁止や購入しすぎを防ぐ仕組みの提供、今後の法制化に向けたさらなる情報の収集などの方針を示すのにとどまった。</p></div></blockquote><p> <a href=\"https://it.srad.jp/story/22/07/20/1532255/\">すべて読む</a> | <a href=\"https://it.srad.jp/\">ITセクション</a> | <a href=\"https://srad.jp/stories/unitedkingdom\">英国</a> | <a href=\"https://srad.jp/stories/politics\">政治</a> | <a href=\"https://srad.jp/stories/games\">ゲーム</a> | <a href=\"https://srad.jp/stories/it\">IT</a> | <a href=\"https://srad.jp/stories/government\">政府</a> | <a href=\"https://srad.jp/stories/money\">お金</a> | <a href=\"https://twitter.com/share?url=https://it.srad.jp/story/22/07/20/1532255/&text=%E8%8B%B1%E6%94%BF%E5%BA%9C%E3%80%81%E8%B3%AD%E5%8D%9A%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E6%B3%95%E4%BB%A4%E3%81%AB%E3%82%88%E3%82%8B%20loot%20box%20%E8%A6%8F%E5%88%B6%E3%82%92%E8%A6%8B%E9%80%81%E3%82%8A\" title=\"この記事をTwitterでつぶやく\"><img alt=\"この記事をTwitterでつぶやく\" border=\"0\" src=\"//images.srad.jp/classic/img/twitter_32.png/20150127\" /></a> <a href=\"//www.facebook.com/sharer.php?u=https://it.srad.jp/story/22/07/20/1532255/\" title=\"この記事をFacebookで共有\"><img src=\"//images.srad.jp/classic/img/facebook_32.png\" border=\"0\" alt=\"この記事をFacebookで共有\" /></a> <a href=\"https://plus.google.com/share?url=https://it.srad.jp/story/22/07/20/1532255/\" title=\"この記事をGoogle Plusで共有\"><img src=\"https://www.gstatic.com/images/icons/gplus-32.png\" border=\"0\" alt=\"この記事をGoogle Plusで共有\" /></a> <a href=\"//b.hatena.ne.jp/entry/https://it.srad.jp/story/22/07/20/1532255/\" title=\"このエントリーをはてなブックマークに追加\"><img src=\"https://b.st-hatena.com/images/entry-button/button-only@2x.png\" alt=\"このエントリーをはてなブックマークに追加\" width=\"32\" height=\"32\" style=\"border: none;\" border=\"0\" /></a> </p> <p> 関連ストーリー： <br><a href=\"https://srad.jp/story/22/06/07/173253\">スペインで「課金ガチャ」規制法案が提出へ</a> <small>2022年06月09日</small> <br><a href=\"https://idle.srad.jp/story/20/07/05/0744217\">英上院特別委員会、loot boxを賭博として規制するよう勧告</a> <small>2020年07月05日</small> <br><a href=\"https://idle.srad.jp/story/20/04/17/1335253\">ESRB、「ランダムアイテムを含むゲーム内購入」をレーティングラベルの新要素として追加へ</a> <small>2020年04月17日</small> <br><a href=\"https://idle.srad.jp/story/19/09/16/0613235\">英文化・メディア・スポーツ委員会、ゲーム内のガチャを賭博とみなして規制対象にするよう英政府に勧告</a> <small>2019年09月16日</small> <br><a href=\"https://it.srad.jp/story/19/06/01/0721220\">Google Playのデベロッパープログラムポリシー大幅改訂、子供の保護や性的コンテンツの規制強化</a> <small>2019年06月01日</small> <br><a href=\"https://mobile.srad.jp/story/19/05/24/0517212\">任天堂、loot box規制を受けてモバイルゲーム2本のベルギーでのサービス終了を発表</a> <small>2019年05月24日</small> </p> <p>Article URL: <a href=\"https://it.srad.jp/story/22/07/20/1532255/\">https://it.srad.jp/story/22/07/20/1532255/</a></p> </blockquote>","date_published":"2022-07-21T21:10:00.000Z"},{"id":"https://lobste.rs/s/ju2rk6/security_best_practices_for_small","url":"https://lobste.rs/s/ju2rk6/security_best_practices_for_small","title":"Security best practices for small company","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Security best practices for small company</strong></p> <p>by msingle@users.lobste.rs (msingle) <i>#security</i> <i>#devops</i> <i>#practices</i> <i>#ask</i></p> <p>I’m a developer that’s now responsible for “technical stuff” for a small company (we have a website/app that supports human services). Me, a contract developer and a support/helpdesk/dba person are going to be responsible for all the servers/network/database/etc and the users will never need to know about anything beyond their O365 login.</p> <p>We’re moving our stuff to azure, but right now I would love some suggestions relating to security. We’ve got a password manager, and was thinking about us having hardware tokens (Yubikeys?). Anything else that we should keep in mind?</p> <p>I’m thinking about using tailscale for network access/VPN functionality. (I’m not a fan of bastion and connecting to remote databases will be good for developing/troubleshooting).</p> <p>Article URL: <a href=\"https://lobste.rs/s/ju2rk6/security_best_practices_for_small\">https://lobste.rs/s/ju2rk6/security_best_practices_for_small</a></p> </blockquote>","date_published":"2022-07-21T20:33:24.000Z"},{"id":"http://www.albumoftheyear.org/album/489472-nina-nastasia-riderless-horse.php","url":"http://www.albumoftheyear.org/album/489472-nina-nastasia-riderless-horse.php","title":"Nina Nastasia - Riderless Horse","content_html":"<blockquote> <p><a href=\"http://www.albumoftheyear.org/ratings.php\">Recently Rated Albums - Album of The Year</a> <strong>Nina Nastasia - Riderless Horse</strong></p> <p> </p> Critic Score: 86 based on 5 reviews <p>Article URL: <a href=\"http://www.albumoftheyear.org/album/489472-nina-nastasia-riderless-horse.php\">http://www.albumoftheyear.org/album/489472-nina-nastasia-riderless-horse.php</a></p> </blockquote>","date_published":"2022-07-21T20:00:04.000Z"},{"id":"https://www.henricodolfing.com/2019/10/case-study-hertz-accenture-website.html","url":"https://www.henricodolfing.com/2019/10/case-study-hertz-accenture-website.html","title":"Hertz paid Accenture $32M for a website that never went live","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Hertz paid Accenture $32M for a website that never went live</strong></p> <p> </p> <p>Article URL: <a href=\"https://www.henricodolfing.com/2019/10/case-study-hertz-accenture-website.html\">https://www.henricodolfing.com/2019/10/case-study-hertz-accenture-website.html</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32184183\">https://news.ycombinator.com/item?id=32184183</a></p> <p>Points: 323</p> <p># Comments: 204</p> <p>Article URL: <a href=\"https://www.henricodolfing.com/2019/10/case-study-hertz-accenture-website.html\">https://www.henricodolfing.com/2019/10/case-study-hertz-accenture-website.html</a></p> </blockquote>","date_published":"2022-07-21T19:59:58.000Z"},{"id":"https://github.com/saturnflyer/casting","url":"https://github.com/saturnflyer/casting","title":"casting: Delegate methods in Ruby, preserving self and superclass hierarchy","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>casting: Delegate methods in Ruby, preserving self and superclass hierarchy</strong></p> <p>by saturnflyer@users.lobste.rs (saturnflyer) <i>#ruby</i></p> <p><a href=\"https://lobste.rs/s/1nxtll/casting_delegate_methods_ruby\">Comments</a></p> <p>Article URL: <a href=\"https://github.com/saturnflyer/casting\">https://github.com/saturnflyer/casting</a></p> </blockquote>","date_published":"2022-07-21T19:36:01.000Z"},{"id":"https://pythonspeed.com/articles/celery-performance/","url":"https://pythonspeed.com/articles/celery-performance/","title":"Finding performance bottlenecks in Celery tasks","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Finding performance bottlenecks in Celery tasks</strong></p> <p>by itamarst@users.lobste.rs (itamarst) <i>#python</i> <i>#performance</i></p> <p><a href=\"https://lobste.rs/s/wu94wy/finding_performance_bottlenecks_celery\">Comments</a></p> <p>Article URL: <a href=\"https://pythonspeed.com/articles/celery-performance/\">https://pythonspeed.com/articles/celery-performance/</a></p> </blockquote>","date_published":"2022-07-21T19:13:00.000Z"},{"id":"https://racket.discourse.group/t/summer-lang-party/1128","url":"https://racket.discourse.group/t/summer-lang-party/1128","title":"Summer #lang Party","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Summer #lang Party</strong></p> <p>by spdegabrielle@users.lobste.rs (spdegabrielle) <i>#lisp</i> <i>#plt</i></p> <p><a href=\"https://lobste.rs/s/af64ap/summer_lang_party\">Comments</a></p> <p>Article URL: <a href=\"https://racket.discourse.group/t/summer-lang-party/1128\">https://racket.discourse.group/t/summer-lang-party/1128</a></p> </blockquote>","date_published":"2022-07-21T19:10:55.000Z"},{"id":"https://www.science.org/content/article/potential-fabrication-research-images-threatens-key-theory-alzheimers-disease","url":"https://www.science.org/content/article/potential-fabrication-research-images-threatens-key-theory-alzheimers-disease","title":"Potential fabrication in research threatens the amyloid theory of Alzheimer’s","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Potential fabrication in research threatens the amyloid theory of Alzheimer’s</strong></p> <p> </p> <p>Article URL: <a href=\"https://www.science.org/content/article/potential-fabrication-research-images-threatens-key-theory-alzheimers-disease\">https://www.science.org/content/article/potential-fabrication-research-images-threatens-key-theory-alzheimers-disease</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32183302\">https://news.ycombinator.com/item?id=32183302</a></p> <p>Points: 298</p> <p># Comments: 98</p> <p>Article URL: <a href=\"https://www.science.org/content/article/potential-fabrication-research-images-threatens-key-theory-alzheimers-disease\">https://www.science.org/content/article/potential-fabrication-research-images-threatens-key-theory-alzheimers-disease</a></p> </blockquote>","date_published":"2022-07-21T18:54:37.000Z"},{"id":"https://www.strongtowns.org/journal/2022/7/5/heres-why-we-respond-in-force-to-one-amtrak-crash-while-ignoring-thousands-of-daily-car-crashes","url":"https://www.strongtowns.org/journal/2022/7/5/heres-why-we-respond-in-force-to-one-amtrak-crash-while-ignoring-thousands-of-daily-car-crashes","title":"Why we ignore thousands of daily car crashes","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Why we ignore thousands of daily car crashes</strong></p> <p> </p> <p>Article URL: <a href=\"https://www.strongtowns.org/journal/2022/7/5/heres-why-we-respond-in-force-to-one-amtrak-crash-while-ignoring-thousands-of-daily-car-crashes\">https://www.strongtowns.org/journal/2022/7/5/heres-why-we-respond-in-force-to-one-amtrak-crash-while-ignoring-thousands-of-daily-car-crashes</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32183007\">https://news.ycombinator.com/item?id=32183007</a></p> <p>Points: 295</p> <p># Comments: 290</p> <p>Article URL: <a href=\"https://www.strongtowns.org/journal/2022/7/5/heres-why-we-respond-in-force-to-one-amtrak-crash-while-ignoring-thousands-of-daily-car-crashes\">https://www.strongtowns.org/journal/2022/7/5/heres-why-we-respond-in-force-to-one-amtrak-crash-while-ignoring-thousands-of-daily-car-crashes</a></p> </blockquote>","date_published":"2022-07-21T18:31:39.000Z"},{"id":"https://tigyog.app/d/C-I1weB9CpTH/r/everyday-data-science","url":"https://tigyog.app/d/C-I1weB9CpTH/r/everyday-data-science","title":"Interactive book/course about “everyday” data science","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Interactive book/course about “everyday” data science</strong></p> <p>by jameshfisher@users.lobste.rs (jameshfisher) <i>#science</i> <i>#compsci</i> <i>#book</i> <i>#show</i> <i>#math</i> <i>#education</i></p> <p><a href=\"https://lobste.rs/s/aczook/interactive_book_course_about_everyday\">Comments</a></p> <p>Article URL: <a href=\"https://tigyog.app/d/C-I1weB9CpTH/r/everyday-data-science\">https://tigyog.app/d/C-I1weB9CpTH/r/everyday-data-science</a></p> </blockquote>","date_published":"2022-07-21T17:13:53.000Z"},{"id":"https://statmodeling.stat.columbia.edu/2022/07/21/predicting-consumers-choices-in-the-age-of-the-internet-ai-and-almost-perfect-tracking-some-things-change-the-key-challenges-do-not/","url":"https://statmodeling.stat.columbia.edu/2022/07/21/predicting-consumers-choices-in-the-age-of-the-internet-ai-and-almost-perfect-tracking-some-things-change-the-key-challenges-do-not/","title":"ML is not that good at predicting consumers' choices","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>ML is not that good at predicting consumers' choices</strong></p> <p> </p> <p>Article URL: <a href=\"https://statmodeling.stat.columbia.edu/2022/07/21/predicting-consumers-choices-in-the-age-of-the-internet-ai-and-almost-perfect-tracking-some-things-change-the-key-challenges-do-not/\">https://statmodeling.stat.columbia.edu/2022/07/21/predicting-consumers-choices-in-the-age-of-the-internet-ai-and-almost-perfect-tracking-some-things-change-the-key-challenges-do-not/</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32181974\">https://news.ycombinator.com/item?id=32181974</a></p> <p>Points: 155</p> <p># Comments: 130</p> <p>Article URL: <a href=\"https://statmodeling.stat.columbia.edu/2022/07/21/predicting-consumers-choices-in-the-age-of-the-internet-ai-and-almost-perfect-tracking-some-things-change-the-key-challenges-do-not/\">https://statmodeling.stat.columbia.edu/2022/07/21/predicting-consumers-choices-in-the-age-of-the-internet-ai-and-almost-perfect-tracking-some-things-change-the-key-challenges-do-not/</a></p> </blockquote>","date_published":"2022-07-21T17:13:16.000Z"},{"id":"https://codersblock.com/blog/star-wars-scene-transition-effects-in-css/","url":"https://codersblock.com/blog/star-wars-scene-transition-effects-in-css/","title":"Star Wars Scene Transition Effects in CSS","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Star Wars Scene Transition Effects in CSS</strong></p> <p>by asteroid@users.lobste.rs (asteroid) <i>#css</i></p> <p><a href=\"https://lobste.rs/s/xnmiav/star_wars_scene_transition_effects_css\">Comments</a></p> <p>Article URL: <a href=\"https://codersblock.com/blog/star-wars-scene-transition-effects-in-css/\">https://codersblock.com/blog/star-wars-scene-transition-effects-in-css/</a></p> </blockquote>","date_published":"2022-07-21T17:12:52.000Z"},{"id":"https://github.com/juanfont/headscale","url":"https://github.com/juanfont/headscale","title":"headscale: Open source, self-hosted implementation of the Tailscale control server","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>headscale: Open source, self-hosted implementation of the Tailscale control server</strong></p> <p>by aloha@users.lobste.rs (aloha) <i>#networking</i> <i>#distributed</i></p> <p><a href=\"https://lobste.rs/s/f0wzzx/headscale_open_source_self_hosted\">Comments</a></p> <p>Article URL: <a href=\"https://github.com/juanfont/headscale\">https://github.com/juanfont/headscale</a></p> </blockquote>","date_published":"2022-07-21T17:10:16.000Z"},{"id":"https://deno.com/blog/v1.24","url":"https://deno.com/blog/v1.24","title":"Deno 1.24 Release Notes","content_html":"<blockquote> <p><a href=\"https://deno.com/blog\">Deno</a> <strong>Deno 1.24 Release Notes</strong></p> <p> </p> Deno 1.24 improves performance of transpiling and type-checking, adds unhandledrejection and beforeunload events, adds import.meta.resolve() API, and more <p>Article URL: <a href=\"https://deno.com/blog/v1.24\">https://deno.com/blog/v1.24</a></p> </blockquote>","date_published":"2022-07-21T17:00:00.000Z"},{"id":"https://htmx.org/essays/spa-alternative/","url":"https://htmx.org/essays/spa-alternative/","title":"An SPA alternative","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>An SPA alternative</strong></p> <p>by baobabkoodaa@users.lobste.rs (baobabkoodaa) <i>#web</i></p> <p><a href=\"https://lobste.rs/s/bjs8hy/spa_alternative\">Comments</a></p> <p>Article URL: <a href=\"https://htmx.org/essays/spa-alternative/\">https://htmx.org/essays/spa-alternative/</a></p> </blockquote>","date_published":"2022-07-21T16:42:34.000Z"},{"id":"http://www.albumoftheyear.org/album/486942-beach-bunny-emotional-creature.php","url":"http://www.albumoftheyear.org/album/486942-beach-bunny-emotional-creature.php","title":"Beach Bunny - Emotional Creature","content_html":"<blockquote> <p><a href=\"http://www.albumoftheyear.org/ratings.php\">Recently Rated Albums - Album of The Year</a> <strong>Beach Bunny - Emotional Creature</strong></p> <p> </p> Critic Score: 79 based on 6 reviews <p>Article URL: <a href=\"http://www.albumoftheyear.org/album/486942-beach-bunny-emotional-creature.php\">http://www.albumoftheyear.org/album/486942-beach-bunny-emotional-creature.php</a></p> </blockquote>","date_published":"2022-07-21T16:40:03.000Z"},{"id":"https://pitchfork.com/reviews/tracks/caroline-shaw-attacca-quartet-three-essays-first-essay-nimrod","url":"https://pitchfork.com/reviews/tracks/caroline-shaw-attacca-quartet-three-essays-first-essay-nimrod","title":"Caroline Shaw and the Attacca Quartet’s “Three Essays: First Essay (Nimrod)” Is Magnificently Overgrown","content_html":"<blockquote> <p><a href=\"https://pitchfork.com/feed-track-reviews\">RSS: Track Reviews</a> <strong>Caroline Shaw and the Attacca Quartet’s “Three Essays: First Essay (Nimrod)” Is Magnificently Overgrown</strong></p> <p> <i>#Reviews / Tracks</i></p> Inspired by the prose of novelist Marilynne Robinson, the Pulitzer-winning composer and chamber quartet’s latest collaboration splinters and detours. <p>Article URL: <a href=\"https://pitchfork.com/reviews/tracks/caroline-shaw-attacca-quartet-three-essays-first-essay-nimrod\">https://pitchfork.com/reviews/tracks/caroline-shaw-attacca-quartet-three-essays-first-essay-nimrod</a></p> </blockquote>","date_published":"2022-07-21T16:14:17.000Z"},{"id":"http://toastycode.com/besavers/buynow.html","url":"http://toastycode.com/besavers/buynow.html","title":"Buy Now: the screensaver (2007)","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Buy Now: the screensaver (2007)</strong></p> <p>by classichasclass@users.lobste.rs (classichasclass) <i>#historical</i></p> <p>And yes, the Baron is Baron Arnold, the one who owns all your files on BeOS. (See <a href=\"https://www.osnews.com/story/7265/celebrating-ten-years-of-beos/\" rel=\"ugc\">https://www.osnews.com/story/7265/celebrating-ten-years-of-beos/</a> for context.)</p> <p><a href=\"https://lobste.rs/s/flgwmz/buy_now_screensaver_2007\">Comments</a></p> <p>Article URL: <a href=\"http://toastycode.com/besavers/buynow.html\">http://toastycode.com/besavers/buynow.html</a></p> </blockquote>","date_published":"2022-07-21T15:47:31.000Z"},{"id":"https://homotopic.tech/post/unit-aware-data-frames.html","url":"https://homotopic.tech/post/unit-aware-data-frames.html","title":"Unit-aware data frames with composite, dimensional and ixset-typed","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Unit-aware data frames with composite, dimensional and ixset-typed</strong></p> <p>by srid@users.lobste.rs (srid) <i>#haskell</i></p> <p><a href=\"https://lobste.rs/s/mrwmmv/unit_aware_data_frames_with_composite\">Comments</a></p> <p>Article URL: <a href=\"https://homotopic.tech/post/unit-aware-data-frames.html\">https://homotopic.tech/post/unit-aware-data-frames.html</a></p> </blockquote>","date_published":"2022-07-21T15:40:39.000Z"},{"id":"https://stacker.news/items/47796","url":"https://stacker.news/items/47796","title":"Former Coinbase Employee Charged in First Ever Crypto Insider Trading Scheme","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Former Coinbase Employee Charged in First Ever Crypto Insider Trading Scheme</strong></p> <p> </p> <p>Article URL: <a href=\"https://stacker.news/items/47796\">https://stacker.news/items/47796</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32180555\">https://news.ycombinator.com/item?id=32180555</a></p> <p>Points: 233</p> <p># Comments: 159</p> <p>Article URL: <a href=\"https://stacker.news/items/47796\">https://stacker.news/items/47796</a></p> </blockquote>","date_published":"2022-07-21T15:29:10.000Z"},{"id":"https://www.justice.gov/usao-sdny/pr/three-charged-first-ever-cryptocurrency-insider-trading-tipping-scheme","url":"https://www.justice.gov/usao-sdny/pr/three-charged-first-ever-cryptocurrency-insider-trading-tipping-scheme","title":"Former Coinbase PM Charged in Cryptocurrency Insider Trading Tipping Scheme","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Former Coinbase PM Charged in Cryptocurrency Insider Trading Tipping Scheme</strong></p> <p> </p> <p>Article URL: <a href=\"https://www.justice.gov/usao-sdny/pr/three-charged-first-ever-cryptocurrency-insider-trading-tipping-scheme\">https://www.justice.gov/usao-sdny/pr/three-charged-first-ever-cryptocurrency-insider-trading-tipping-scheme</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32180428\">https://news.ycombinator.com/item?id=32180428</a></p> <p>Points: 220</p> <p># Comments: 31</p> <p>Article URL: <a href=\"https://www.justice.gov/usao-sdny/pr/three-charged-first-ever-cryptocurrency-insider-trading-tipping-scheme\">https://www.justice.gov/usao-sdny/pr/three-charged-first-ever-cryptocurrency-insider-trading-tipping-scheme</a></p> </blockquote>","date_published":"2022-07-21T15:19:41.000Z"},{"id":"https://watchmono.com/e/benq-ex3410r-review-check","url":"https://watchmono.com/e/benq-ex3410r-review-check","title":"BenQ 『EX3410R』 レビューチェック ～曲率1000Rの34インチ/VA/UWQHD/144Hzウルトラワイドゲーミングモニター","content_html":"<blockquote> <p><a href=\"https://watchmono.com/\">ヲチモノ</a> <strong>BenQ 『EX3410R』 レビューチェック ～曲率1000Rの34インチ/VA/UWQHD/144Hzウルトラワイドゲーミングモニター</strong></p> <p>by ヲチモノ <i>#ゲーミングモニター</i></p> 2022年2月に発売されたBenQの34インチ液晶モニター「EX3410R」。「EX3415R」に続くMOBIUZブランドのウルトラワイドゲーミングモニターで、こちらは解像度：3440x1440/曲率1 <p>Article URL: <a href=\"https://watchmono.com/e/benq-ex3410r-review-check\">https://watchmono.com/e/benq-ex3410r-review-check</a></p> </blockquote>","date_published":"2022-07-21T15:00:30.000Z"},{"id":"https://watchmono.com/e/nzxt-canvas-32q-curved","url":"https://watchmono.com/e/nzxt-canvas-32q-curved","title":"NZXT、31.5インチ/曲面VA/WQHD/165Hzを特徴とする自身初のゲーミングモニター『Canvas 32Q Curved』","content_html":"<blockquote> <p><a href=\"https://watchmono.com/\">ヲチモノ</a> <strong>NZXT、31.5インチ/曲面VA/WQHD/165Hzを特徴とする自身初のゲーミングモニター『Canvas 32Q Curved』</strong></p> <p>by ヲチモノ <i>#ゲーミングモニター</i></p> 海外で見かけたNZXTの31.5インチ液晶モニター「Canvas 32Q Curved」。PCケースやPCパーツが日本でも人気を得ているNZXTが”Canvas”というシリーズで自身初のゲーミングモニ <p>Article URL: <a href=\"https://watchmono.com/e/nzxt-canvas-32q-curved\">https://watchmono.com/e/nzxt-canvas-32q-curved</a></p> </blockquote>","date_published":"2022-07-21T15:00:20.000Z"},{"id":"https://www.theverge.com/2022/7/19/23270396/nasa-james-webb-space-telescope-online-poll-investment","url":"https://www.theverge.com/2022/7/19/23270396/nasa-james-webb-space-telescope-online-poll-investment","title":"Most Americans think NASA’s $10B space telescope is a good investment","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Most Americans think NASA’s $10B space telescope is a good investment</strong></p> <p> </p> <p>Article URL: <a href=\"https://www.theverge.com/2022/7/19/23270396/nasa-james-webb-space-telescope-online-poll-investment\">https://www.theverge.com/2022/7/19/23270396/nasa-james-webb-space-telescope-online-poll-investment</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32180196\">https://news.ycombinator.com/item?id=32180196</a></p> <p>Points: 174</p> <p># Comments: 106</p> <p>Article URL: <a href=\"https://www.theverge.com/2022/7/19/23270396/nasa-james-webb-space-telescope-online-poll-investment\">https://www.theverge.com/2022/7/19/23270396/nasa-james-webb-space-telescope-online-poll-investment</a></p> </blockquote>","date_published":"2022-07-21T15:00:13.000Z"},{"id":"https://watchmono.com/e/asus-tx-gaming-keyboard","url":"https://watchmono.com/e/asus-tx-gaming-keyboard","title":"ASUS、中国限定になると思われるTXシリーズのゲーミングメカニカルキーボード『TX GAMING KEYBOARD』","content_html":"<blockquote> <p><a href=\"https://watchmono.com/\">ヲチモノ</a> <strong>ASUS、中国限定になると思われるTXシリーズのゲーミングメカニカルキーボード『TX GAMING KEYBOARD』</strong></p> <p>by ヲチモノ <i>#ゲーミングキーボード</i></p> 海外で見かけたASUSのキーボード「TX GAMING KEYBOARD」。「TX GAMING MOUSE」と共におそらく中国限定でリリースされるTXシリーズのゲーミングメカニカルキーボード。こち <p>Article URL: <a href=\"https://watchmono.com/e/asus-tx-gaming-keyboard\">https://watchmono.com/e/asus-tx-gaming-keyboard</a></p> </blockquote>","date_published":"2022-07-21T15:00:10.000Z"},{"id":"https://watchmono.com/e/asus-tx-gaming-mouse","url":"https://watchmono.com/e/asus-tx-gaming-mouse","title":"ASUS、中国限定になると思われるTXシリーズのワイヤレスゲーミングマウス『TX GAMING MOUSE』","content_html":"<blockquote> <p><a href=\"https://watchmono.com/\">ヲチモノ</a> <strong>ASUS、中国限定になると思われるTXシリーズのワイヤレスゲーミングマウス『TX GAMING MOUSE』</strong></p> <p>by ヲチモノ <i>#ゲーミングマウス</i></p> 海外で見かけたASUSのマウス「TX GAMING MOUSE」。同社のTXシリーズといえばイメージキャラクター”天选姬”を前面に出して中国限定で主にノートPCを展開していましたが、新 <p>Article URL: <a href=\"https://watchmono.com/e/asus-tx-gaming-mouse\">https://watchmono.com/e/asus-tx-gaming-mouse</a></p> </blockquote>","date_published":"2022-07-21T15:00:00.000Z"},{"id":"https://www.theverge.com/23270191/framework-laptop-12th-gen-2022-review","url":"https://www.theverge.com/23270191/framework-laptop-12th-gen-2022-review","title":"Framework Laptop (2022) review: the repairability dream","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Framework Laptop (2022) review: the repairability dream</strong></p> <p> </p> <p>Article URL: <a href=\"https://www.theverge.com/23270191/framework-laptop-12th-gen-2022-review\">https://www.theverge.com/23270191/framework-laptop-12th-gen-2022-review</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32179842\">https://news.ycombinator.com/item?id=32179842</a></p> <p>Points: 161</p> <p># Comments: 162</p> <p>Article URL: <a href=\"https://www.theverge.com/23270191/framework-laptop-12th-gen-2022-review\">https://www.theverge.com/23270191/framework-laptop-12th-gen-2022-review</a></p> </blockquote>","date_published":"2022-07-21T14:30:26.000Z"},{"id":"https://mtlynch.io/tinypilot-redesign/","url":"https://mtlynch.io/tinypilot-redesign/","title":"I Regret my $46k Website Redesign","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>I Regret my $46k Website Redesign</strong></p> <p> </p> <p>Article URL: <a href=\"https://mtlynch.io/tinypilot-redesign/\">https://mtlynch.io/tinypilot-redesign/</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32179563\">https://news.ycombinator.com/item?id=32179563</a></p> <p>Points: 177</p> <p># Comments: 82</p> <p>Article URL: <a href=\"https://mtlynch.io/tinypilot-redesign/\">https://mtlynch.io/tinypilot-redesign/</a></p> </blockquote>","date_published":"2022-07-21T14:06:31.000Z"},{"id":"https://fortune.com/2022/07/19/glassdoor-court-order-reveal-employees-behind-anonymous-reviews/","url":"https://fortune.com/2022/07/19/glassdoor-court-order-reveal-employees-behind-anonymous-reviews/","title":"Glassdoor ordered to unmask former toy company employees who posted criticism","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Glassdoor ordered to unmask former toy company employees who posted criticism</strong></p> <p> </p> <p>Article URL: <a href=\"https://fortune.com/2022/07/19/glassdoor-court-order-reveal-employees-behind-anonymous-reviews/\">https://fortune.com/2022/07/19/glassdoor-court-order-reveal-employees-behind-anonymous-reviews/</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32179396\">https://news.ycombinator.com/item?id=32179396</a></p> <p>Points: 175</p> <p># Comments: 102</p> <p>Article URL: <a href=\"https://fortune.com/2022/07/19/glassdoor-court-order-reveal-employees-behind-anonymous-reviews/\">https://fortune.com/2022/07/19/glassdoor-court-order-reveal-employees-behind-anonymous-reviews/</a></p> </blockquote>","date_published":"2022-07-21T13:52:57.000Z"},{"id":"https://blog.plover.com/prog/git/tips-2.html","url":"https://blog.plover.com/prog/git/tips-2.html","title":"Things I wish everyone knew about Git (Part II)","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Things I wish everyone knew about Git (Part II)</strong></p> <p>by calvin@users.lobste.rs (calvin) <i>#vcs</i></p> <p><a href=\"https://lobste.rs/s/nqaih8/things_i_wish_everyone_knew_about_git_part\">Comments</a></p> <p>Article URL: <a href=\"https://blog.plover.com/prog/git/tips-2.html\">https://blog.plover.com/prog/git/tips-2.html</a></p> </blockquote>","date_published":"2022-07-21T13:44:17.000Z"},{"id":"https://metalbear.co/blog/getting-started-with-ephemeral-containers/","url":"https://metalbear.co/blog/getting-started-with-ephemeral-containers/","title":"Getting Started With Ephemeral Containers","content_html":"<blockquote> <p><a href=\"https://lobste.rs/\">Lobsters</a> <strong>Getting Started With Ephemeral Containers</strong></p> <p>by infiniteregrets@users.lobste.rs (infiniteregrets) <i>#devops</i> <i>#distributed</i> <i>#debugging</i></p> <p><a href=\"https://lobste.rs/s/b4uxnq/getting_started_with_ephemeral\">Comments</a></p> <p>Article URL: <a href=\"https://metalbear.co/blog/getting-started-with-ephemeral-containers/\">https://metalbear.co/blog/getting-started-with-ephemeral-containers/</a></p> </blockquote>","date_published":"2022-07-21T13:26:32.000Z"},{"id":"https://press.aboutamazon.com/news-releases/news-release-details/amazon-and-one-medical-sign-agreement-amazon-acquire-one-medical/","url":"https://press.aboutamazon.com/news-releases/news-release-details/amazon-and-one-medical-sign-agreement-amazon-acquire-one-medical/","title":"Amazon to Acquire One Medical","content_html":"<blockquote> <p><a href=\"https://news.ycombinator.com/classic\">Hacker News: Classic</a> <strong>Amazon to Acquire One Medical</strong></p> <p> </p> <p>Article URL: <a href=\"https://press.aboutamazon.com/news-releases/news-release-details/amazon-and-one-medical-sign-agreement-amazon-acquire-one-medical/\">https://press.aboutamazon.com/news-releases/news-release-details/amazon-and-one-medical-sign-agreement-amazon-acquire-one-medical/</a></p> <p>Comments URL: <a href=\"https://news.ycombinator.com/item?id=32178643\">https://news.ycombinator.com/item?id=32178643</a></p> <p>Points: 172</p> <p># Comments: 127</p> <p>Article URL: <a href=\"https://press.aboutamazon.com/news-releases/news-release-details/amazon-and-one-medical-sign-agreement-amazon-acquire-one-medical/\">https://press.aboutamazon.com/news-releases/news-release-details/amazon-and-one-medical-sign-agreement-amazon-acquire-one-medical/</a></p> </blockquote>","date_published":"2022-07-21T12:45:04.000Z"}]}